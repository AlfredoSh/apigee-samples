<ServiceCallout name='SC-DLP-DeIdentify-Template2'>

  <Request clearPayload="true" variable="dlpRequest">
    <IgnoreUnresolvedVariables>false</IgnoreUnresolvedVariables>
    <Set>
      <Verb>POST</Verb>
      <Headers>
        <Header name="x-goog-user-project">{propertyset.dlp.project}</Header>
      </Headers>

      <!--
          The payload sent to DLP must be JSON. The following element uses a
          message template to generate the appropriate json.  Within the JSON,
          we can encapsulate any string, even XML format, via the escapeJson
          function.
      -->
      <Payload contentType="application/json">
{
  "inspectConfig": {
    "infoTypes": [ {propertyset.dlp.infotypes} ]
  },
  "deidentifyTemplateName": "{propertyset.dlp.deidentify_template2}",
  "item": {
    "value": "{escapeJSON(request.content)}"
  }
}
      </Payload>
      <Path>v2/projects/{propertyset.dlp.project}/content:deidentify</Path>
    </Set>
  </Request>

  <Response>dlpResponse</Response>

  <HTTPTargetConnection>
    <!--
        The following configuration tells Apigee to automatically attach an
        Access Token when invoking the DLP endpoint. Apigee obtains the access
        token from the Service Account that you use to deploy this API proxy.
    -->
    <Authentication>
      <GoogleAccessToken>
        <Scopes>
          <Scope>https://www.googleapis.com/auth/cloud-platform</Scope>
        </Scopes>
      </GoogleAccessToken>
    </Authentication>

    <Properties>
      <Property name='success.codes'>2xx</Property>
    </Properties>
    <URL>https://dlp.googleapis.com</URL>
  </HTTPTargetConnection>
</ServiceCallout>
